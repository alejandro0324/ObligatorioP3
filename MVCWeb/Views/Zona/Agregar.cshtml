@model CommonSolution.DTOs.DTO_Zona

@{
    ViewBag.Title = "Agregar";
}

<h2>Agregar</h2>



@Html.AntiForgeryToken()

<div class="form">
    <h4>Formulario de alta - Zona</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="form-input">
            @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control", @id = "numero" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="form-input">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @id = "nombre" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="form-input">
            @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control", @type = "color", @Value = "#000000", @id = "color" } })
        </div>
    </div>

    @Html.DropDownListFor(model => model.puntosGps, new SelectList(""), htmlAttributes: new { @id = "selectCoords", @Hidden = "hidden"})

    <span id="map" class="map"></span>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDXATp2dxa45_9cf-0Lq6qMbvwZE2CebAs&callback=initMap"
            async defer>
    </script>

    <input id="submit" type="submit" value="Agregar" />

</div>

<div id="validationDiv"></div>

<div>
    @Html.ActionLink("Volver a la lista", "Listar")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/agregarZona")
<script>
        $(function () {
            $("#submit").click(function () {
                var url = "@Url.Action("AgregarZona", "Zona")";
                var options = document.getElementById('selectCoords').options;
                var puntosGps = [];
                var numero = document.getElementById('numero').value;
                var nombre = document.getElementById('nombre').value;
                var color = document.getElementById('color').value;

                for (var i = 0; i < options.length; i++) {
                    puntosGps.push(options[i].value);
                }

                var data = { puntosGps: puntosGps, color: color, nombre: nombre, numero: numero };

                $.post(url, data).done(function (data) {
                    $("#validationDiv").html("");
                    for (var i = 0; i < data.length; i++) {
                        $("#validationDiv").append("<p id='validationMessage' class='text-danger-validate'>" + data[i] + "</p>");
                    }
                });
            });
        });

    function initMap() {

        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 14,
            center: { lat: 39.8634529372744, lng: -4.034255487260607 }
        });

        var triangleCoords = [
            new google.maps.LatLng(39.8613, -4.0273),
            new google.maps.LatLng(39.8615, -4.0270),
            new google.maps.LatLng(39.8619, -4.0277)
        ];

        triangle = new google.maps.Polygon({
            paths: triangleCoords,
            draggable: true,
            editable: true,
            strokeColor: '#000000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#000000',
            fillOpacity: 0.35
        });
        @foreach (var item in ViewBag.Lista)
            {
                <text>
                var
                </text>
                <text>
                ZonaCoordenadas</text><text>@item.numero.ToString() = [
                    @for(int i = 0; i < item.puntosGps.Count; i++)
                    {
                        if (i != item.puntosGps.Count - 1)
                        {
                            <text>
                            new google.maps.LatLng(@item.puntosGps[i].longitud, @item.puntosGps[i].latitud),
                            </text>
                        }
                        else
                        {
                            <text>
                            new google.maps.LatLng(@item.puntosGps[i].longitud, @item.puntosGps[i].latitud)
                            </text>
                        }
                    }
                ];
                </text>
                <text>
                Zona</text><text>@item.numero.ToString() = new google.maps.Polygon({
                    paths:
                    </text>
                    <text>
                    ZonaCoordenadas</text><text>@item.numero.ToString(),
                    draggable: false,
                    editable: false,
                    strokeColor: '@item.color',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '@item.color',
                    fillOpacity: 0.35
                });
                </text>
                <text>
                Zona</text>@item.numero.ToString()
                <text>
                .setMap(map);
                </text>
                <text>infoWindow = new google.maps.InfoWindow();</text>
                <text>Zona</text>@item.numero.ToString()<text>.addListener("click", function (event) {
                    const polygon = this;
                    const vertices = polygon.getPath();
                    let contentString = "Número: @item.numero"
                                        + "<br>" +
                                        "Nombre: @item.nombre"
                                        + "<br><br>";
                    for (let i = 0; i < vertices.getLength(); i++) {
                        const xy = vertices.getAt(i);
                        contentString +=
                            "Punto " + i + ": " + xy.lat() + "," + xy.lng() + "<br><br>";
                    }
                    infoWindow.setContent(contentString);
                    infoWindow.setPosition(event.latLng);
                    infoWindow.open(map);
                })</text>
            }
        triangle.setMap(map);
        triangle.addListener("click", showArrays);
        infoWindow = new google.maps.InfoWindow();

        google.maps.event.addListener(triangle, "mouseover", colorChange)
        google.maps.event.addListener(triangle, "dragend", getPolygonCoords);
        google.maps.event.addListener(triangle.getPath(), "insert_at", getPolygonCoords);
        google.maps.event.addListener(triangle.getPath(), "remove_at", getPolygonCoords);
        google.maps.event.addListener(triangle.getPath(), "set_at", getPolygonCoords);

    }


</script>
}
